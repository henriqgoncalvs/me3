generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String          @id @default(cuid())
  username      String?         @unique
  email         String?         @unique
  emailVerified DateTime?
  name          String?
  image         String?
  bio           String?
  accounts      Account[]
  sessions      Session[]
  UserSong      UserSong[]
  UserMovie     UserMovie[]
  UserAdjective UserAdjective[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model UserSong {
  id             String  @id @default(cuid())
  songTitle      String
  artist         String
  albumBannerUrl String?
  previewUrl     String?
  spotifyId      String  @unique

  userId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserMovie {
  id          String  @id @default(cuid())
  tmdbId      String  @unique
  title       String
  posterPath  String?
  releaseDate String?

  userId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserAdjective {
  id        String @id @default(cuid())
  adjective String

  userId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
